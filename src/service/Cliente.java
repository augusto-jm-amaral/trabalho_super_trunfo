/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package service;

import java.io.IOException;
import java.io.ObjectInputStream;
import java.io.ObjectOutputStream;
import java.net.Socket;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import model.Carro;
import model.Conexao;
import model.Escopo;
import model.Pacote;

/**
 *
 * @author augusto
 */
public class Cliente extends javax.swing.JFrame {
    
    protected Conexao server;
    protected ArrayList<Carro> carros;
    protected Carro carroNaTela;
    
    /**
     * Creates new form Cliente
     */
    public Cliente() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        tPorta = new javax.swing.JTextField();
        tNome = new javax.swing.JTextField();
        tIp = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        tArea = new javax.swing.JTextArea();
        tEnviar = new javax.swing.JTextField();
        bEnviar = new javax.swing.JButton();
        bConectar = new javax.swing.JButton();
        cOpcoes = new javax.swing.JComboBox();
        bJogar = new javax.swing.JButton();
        jLabel6 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        lMarcaModelo = new javax.swing.JLabel();
        lPreco = new javax.swing.JLabel();
        lCilindradas = new javax.swing.JLabel();
        lPotencia = new javax.swing.JLabel();
        lTorque = new javax.swing.JLabel();
        lVelocidade = new javax.swing.JLabel();
        lPeso = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setText("Nome:");

        jLabel2.setText("Ip:");

        jLabel3.setText("Porta:");

        tPorta.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tPortaActionPerformed(evt);
            }
        });

        tNome.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tNomeActionPerformed(evt);
            }
        });

        tIp.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tIpActionPerformed(evt);
            }
        });

        tArea.setEditable(false);
        tArea.setColumns(20);
        tArea.setRows(5);
        tArea.setRequestFocusEnabled(false);
        jScrollPane1.setViewportView(tArea);

        tEnviar.setEnabled(false);

        bEnviar.setText("Enviar");
        bEnviar.setEnabled(false);
        bEnviar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bEnviarActionPerformed(evt);
            }
        });

        bConectar.setText("Conectar");
        bConectar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bConectarActionPerformed(evt);
            }
        });

        cOpcoes.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Velocidade Max", "Peso", "Cilindrada", "Pre√ßo", "Torque", "Potencia" }));

        bJogar.setText("Jogar");
        bJogar.setEnabled(false);
        bJogar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bJogarActionPerformed(evt);
            }
        });

        jLabel6.setText("Vel Max");

        jLabel8.setText("Peso");

        jLabel9.setText("Preco");

        jLabel10.setText("Cilindradas");

        jLabel11.setText("Potencia");

        jLabel12.setText("Torque");

        lMarcaModelo.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lMarcaModelo.setText("Marca / Modelo");

        lPreco.setText("Preco");

        lCilindradas.setText("Cilindradas");

        lPotencia.setText("Potencia");

        lTorque.setText("Torque");

        lVelocidade.setText("Vel Max");

        lPeso.setText("Peso");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel3)
                            .addComponent(jLabel2)
                            .addComponent(jLabel1))
                        .addGap(74, 74, 74)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(tNome, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(tIp, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(tPorta, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(bConectar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(cOpcoes, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(bJogar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addComponent(lMarcaModelo, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel6)
                            .addComponent(jLabel8)
                            .addComponent(jLabel9)
                            .addComponent(jLabel10)
                            .addComponent(jLabel11)
                            .addComponent(jLabel12))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(lVelocidade)
                            .addComponent(lPeso)
                            .addComponent(lPreco)
                            .addComponent(lCilindradas)
                            .addComponent(lPotencia)
                            .addComponent(lTorque))))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(tEnviar, javax.swing.GroupLayout.PREFERRED_SIZE, 202, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(bEnviar, javax.swing.GroupLayout.DEFAULT_SIZE, 61, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 324, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(tEnviar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(bEnviar)))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addComponent(tNome, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2)
                            .addComponent(tIp, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel3)
                            .addComponent(tPorta, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(9, 9, 9)
                        .addComponent(bConectar)
                        .addGap(23, 23, 23)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(cOpcoes, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(bJogar))
                        .addGap(18, 18, 18)
                        .addComponent(lMarcaModelo)
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel6)
                                .addGap(4, 4, 4)
                                .addComponent(jLabel8)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel10)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel9)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel12)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel11))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(lVelocidade)
                                .addGap(4, 4, 4)
                                .addComponent(lPeso)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(lCilindradas)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(lPreco)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(lTorque)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(lPotencia)))))
                .addContainerGap(23, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void tPortaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tPortaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tPortaActionPerformed

    private void tNomeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tNomeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tNomeActionPerformed

    private void tIpActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tIpActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tIpActionPerformed

    private void bEnviarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bEnviarActionPerformed
        
        String text = this.tEnviar.getText();
        
        this.tEnviar.setText("");
        
        String textC = text.concat("\n");
        String nome = this.tNome.getText();
        
        String textPEnviar = nome + " diz : " + textC;
        
        Pacote pacote = new Pacote(Escopo.CHAT);
        pacote.addContainer(textPEnviar);
        
        try {
            
            
            new ObjectOutputStream(this.server.getSocket().getOutputStream()).writeObject(pacote);
            
        } catch (IOException ex) {
            
            ex.printStackTrace();
        }
        
    }//GEN-LAST:event_bEnviarActionPerformed

    private void bConectarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bConectarActionPerformed
        
        //Pega os ip porta e nome dos campos
        String ip = this.tIp.getText();
        String porta = this.tPorta.getText();
        String nome = this.tNome.getText();
        
        //bloqueia os campos e o bConectar
        this.tIp.setEnabled(false);
        this.tPorta.setEnabled(false);
        this.tNome.setEnabled(false);
        this.bConectar.setEnabled(false);
        
        //desbloqueia o chat
        this.bEnviar.setEnabled(true);
        this.tEnviar.setEnabled(true);
        
        Socket socket;
        
        try {
            
            socket = new Socket(ip, Integer.parseInt(porta));
            this.server = new Conexao(socket);
            
            Thread thread = new Thread(new ServerListener(server));
            thread.start();
            
            Pacote pacote = new Pacote(Escopo.CHAT);
            pacote.addContainer("Jogador " + nome + " acaba de se conectar!\n");
            
            new ObjectOutputStream(this.server.getSocket().getOutputStream()).writeObject(pacote);
            
        } catch (IOException ex) {
            ex.printStackTrace();
        }
        
        
        
    }//GEN-LAST:event_bConectarActionPerformed

    private void bJogarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bJogarActionPerformed
        Pacote pacote = new Pacote(Escopo.JOGADA);
        
        //Opcao, Carro, Nome
        pacote.addContainer((String) this.cOpcoes.getSelectedItem());
        pacote.addContainer(this.carroNaTela);
        pacote.addContainer(this.tNome.getText());
        
        trataPacote(pacote);
    }//GEN-LAST:event_bJogarActionPerformed

    private void renderizarCarroTela() {
        
        this.lMarcaModelo.setText(carroNaTela.getMarca() + " " + carroNaTela.getModelo());
        this.lVelocidade.setText("" + carroNaTela.getVelocidadeMaxima());
        this.lPeso.setText("" + carroNaTela.getPeso());
        this.lCilindradas.setText("" + carroNaTela.getCilindradasMotor());
        this.lPreco.setText("" + carroNaTela.getPreco());
        this.lTorque.setText("" + carroNaTela.getTorque());
        this.lPotencia.setText("" + carroNaTela.getPotencia());
    }
    
    class ServerListener implements Runnable{
        
        Conexao cliente;
        
        public ServerListener(Conexao cliente) {
            this.cliente = cliente;
        }
                
        @Override
        public void run() {
            
            while(true){
                
                try {
                    
                    Pacote pacote = (Pacote) new ObjectInputStream(cliente.getSocket().getInputStream()).readObject();
                    trataPacote(pacote);
                    
                } catch (IOException ex) {
                                        
                    throw  new RuntimeException("Jogador " + cliente.getId() + " desconectou");
                    
                } catch (ClassNotFoundException ex) {
                    ex.printStackTrace();
                }
            }
        }
        
    }
    
    //Trata os pacotes
    public synchronized void trataPacote(Pacote pacote){
        
        Escopo escopo = pacote.getEscopo();
        
        //pacote de chat
        if(escopo == Escopo.CHAT){
            
            this.tArea.append((String)pacote.getContainer().get(0));
            
        //pacote de start
        }else if(escopo == Escopo.START){
            
            this.carros = (ArrayList<Carro>) pacote.getContainer().get(0);
            
            Boolean isStart = (Boolean) pacote.getContainer().get(1);
            
            if(isStart){
                this.bJogar.setEnabled(true);
            }
            
            //printa carro na tela
            carroNaTela = carros.get(0);
            renderizarCarroTela();
        
        //pacote de retorno da jogada
        }else if(escopo == Escopo.JOGADA_RETURN){
            
            Boolean isWin = (Boolean) pacote.getContainer().get(0);
            
            //Ganhou ou Perdeu?
            if(isWin){
                this.bJogar.setEnabled(true);
                
                ArrayList<Carro> carros = (ArrayList<Carro>) pacote.getContainer().get(1);
                
                for (Carro carro : carros) {
                    this.carros.add(carro);
                }
                
            }else{
                this.bJogar.setEnabled(false);
                this.carros.remove(this.carroNaTela);
                
                if(carros.size()==0){
                    //FIM DE JOGO A IMPLEMENTAR ESTE √â TEMPORARIO
                    System.exit(0);
                }
                
                this.carroNaTela = this.carros.get(0);
                renderizarCarroTela();
            }
            
            if(!pacote.getContainer().isEmpty()){
                
                for (Object object : pacote.getContainer()) {
                    carros.add((Carro) object);
                }
            }
        
        //pacote de jogada
        }else if(escopo == Escopo.JOGADA){
            
            try {
                new ObjectOutputStream(server.getSocket().getOutputStream()).writeObject(pacote);
            } catch (IOException ex) {
                ex.printStackTrace();
            }
        
        //pacote que pede uma jogada 
        //(Para os jogadores que n√£o podem fazer a jogada na rodada, o servidor vai requisitar a carta)
        }else if(escopo == Escopo.GET_JOGADA){
            
            Pacote pacoteJogada = new Pacote(Escopo.GET_JOGADA);
            pacoteJogada.addContainer(this.carroNaTela);
            pacoteJogada.addContainer(this.tNome.getText());
            
            try {
                new ObjectOutputStream(server.getSocket().getOutputStream()).writeObject(pacoteJogada);
            } catch (IOException ex) {
                ex.printStackTrace();
            }
            
            
        }
    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Cliente.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Cliente.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Cliente.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Cliente.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Cliente().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton bConectar;
    private javax.swing.JButton bEnviar;
    private javax.swing.JButton bJogar;
    private javax.swing.JComboBox cOpcoes;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lCilindradas;
    private javax.swing.JLabel lMarcaModelo;
    private javax.swing.JLabel lPeso;
    private javax.swing.JLabel lPotencia;
    private javax.swing.JLabel lPreco;
    private javax.swing.JLabel lTorque;
    private javax.swing.JLabel lVelocidade;
    private javax.swing.JTextArea tArea;
    private javax.swing.JTextField tEnviar;
    private javax.swing.JTextField tIp;
    private javax.swing.JTextField tNome;
    private javax.swing.JTextField tPorta;
    // End of variables declaration//GEN-END:variables
}
